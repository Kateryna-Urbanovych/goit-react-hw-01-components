{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Container/Container.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","s","profile","description","src","alt","item","label","quantity","followers","views","likes","getRandomColor","r","Math","floor","random","g","b","toString","Statistics","title","statistics","statList","map","id","percentage","style","backgroundColor","FriendListItem","isOnline","status","width","FriendList","friends","friendList","friend","TransactionHistory","items","transactionHistory","type","amount","currency","Container","children","container","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68058cb7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__10bbc\",\"description\":\"Profile_description__2ZS6N\",\"avatar\":\"Profile_avatar__1r96e\",\"name\":\"Profile_name__2gzhz\",\"tag\":\"Profile_tag__30Wnd\",\"location\":\"Profile_location__3Q8rg\",\"stats\":\"Profile_stats__dfgNN\",\"item\":\"Profile_item__xCfcO\",\"label\":\"Profile_label__12Glc\",\"quantity\":\"Profile_quantity__2NrR8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__14guh\",\"title\":\"Statistics_title__3NOqY\",\"statList\":\"Statistics_statList__3W-UG\",\"item\":\"Statistics_item__3MS0n\",\"percentage\":\"Statistics_percentage__1oYgy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__1P4mP\",\"status\":\"FriendListItem_status__x0MAG\",\"avatar\":\"FriendListItem_avatar__3BJkM\",\"name\":\"FriendListItem_name__1XOZM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__ZiZwE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1WW-p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__7PGMT\"};","import PropTypes from 'prop-types';\nimport s from './Profile.module.css';\n\nfunction Profile({ name, tag, location, avatar, stats }) {\n    return (\n        <div className={s.profile}>\n            <div className={s.description}>\n                <img\n                    src={avatar}\n                    alt=\"Аватар пользователя\"\n                    className={s.avatar}\n                />\n                <p className={s.name}>{name}</p>\n                <p className={s.tag}>@{tag}</p>\n                <p className={s.location}>{location}</p>\n            </div>\n\n            <ul className={s.stats}>\n                <li className={s.item}>\n                    <span className={s.label}>Followers</span>\n                    <span className={s.quantity}>{stats.followers}</span>\n                </li>\n                <li className={s.item}>\n                    <span className={s.label}>Views</span>\n                    <span className={s.quantity}>{stats.views}</span>\n                </li>\n                <li className={s.item}>\n                    <span className={s.label}>Likes</span>\n                    <span className={s.quantity}>{stats.likes}</span>\n                </li>\n            </ul>\n        </div>\n    );\n}\n\nProfile.propTypes = {\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.shape({\n        followers: PropTypes.number.isRequired,\n        views: PropTypes.number.isRequired,\n        likes: PropTypes.number.isRequired,\n    }),\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nfunction Statistics({ title, stats }) {\n    return (\n        <section className={s.statistics}>\n            <h2 className={s.title}>{title}</h2>\n\n            <ul className={s.statList}>\n                {stats.map(({ id, label, percentage }) => (\n                    <li\n                        key={id}\n                        style={{ backgroundColor: getRandomColor() }}\n                        className={s.item}\n                    >\n                        <span className={s.label}>{label}</span>\n                        <span className={s.percentage}>{percentage}%</span>\n                    </li>\n                ))}\n            </ul>\n        </section>\n    );\n}\n\nStatistics.propTypes = {\n    title: PropTypes.string,\n    stats: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            label: PropTypes.string.isRequired,\n            percentage: PropTypes.number.isRequired,\n        }),\n    ),\n};\n\nfunction getRandomColor() {\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `#${r.toString(16)}${g.toString(16)}${b.toString(16)}`;\n}\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FriendListItem.module.css';\n\nfunction FriendListItem({ avatar, name, isOnline }) {\n    return (\n        <li className={s.item}>\n            <span\n                className={s.status}\n                style={{ backgroundColor: isOnline ? 'green' : 'red' }}\n            ></span>\n            <img\n                className={s.avatar}\n                src={avatar}\n                alt=\"Аватар {name}\"\n                width=\"48\"\n            />\n            <p className={s.name}>{name}</p>\n        </li>\n    );\n}\n\nFriendListItem.propTypes = {\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport s from './FriendList.module.css';\n\nfunction FriendList({ friends }) {\n    return (\n        <ul className={s.friendList}>\n            {friends.map(friend => (\n                <FriendListItem\n                    key={friend.id}\n                    avatar={friend.avatar}\n                    name={friend.name}\n                    isOnline={friend.isOnline}\n                />\n            ))}\n        </ul>\n    );\n}\n\nFriendList.propTypes = {\n    friends: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n        }),\n    ),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nfunction TransactionHistory({ items }) {\n    return (\n        <table className={s.transactionHistory}>\n            <thead>\n                <tr>\n                    <th>Type</th>\n                    <th>Amount</th>\n                    <th>Currency</th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {items.map(({ id, type, amount, currency }) => (\n                    <tr key={id}>\n                        <td>{type}</td>\n                        <td>{amount}</td>\n                        <td>{currency}</td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n}\n\nTransactionHistory.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.string.isRequired,\n            amount: PropTypes.string.isRequired,\n            currency: PropTypes.string.isRequired,\n        }),\n    ),\n};\n\nexport default TransactionHistory;\n","import s from './Container.module.css';\n\nfunction Container({ children }) {\n    return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import Profile from './components/Profile/Profile';\nimport user from './components/Profile/user.json';\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './components/Statistics/statistical-data.json';\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './components/FriendList/friends.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './components/TransactionHistory/transactions.json';\nimport Container from './components/Container/Container';\n\nfunction App() {\n    return (\n        <Container>\n            <h2>Задание 1 - Профиль социальной сети</h2>\n            <Profile\n                name={user.name}\n                tag={user.tag}\n                location={user.location}\n                avatar={user.avatar}\n                stats={user.stats}\n            />\n            <h2>Задание 2 - Секция статистики</h2>\n            <Statistics title=\"Upload stats\" stats={statisticalData} />\n            {/* <Statistics stats={statisticalData} /> */}\n            <h2>Задание 3 - Список друзей</h2>\n            <FriendList friends={friends} />\n            <h2>Задание 4 - История транзакций</h2>\n            <TransactionHistory items={transactions} />\n        </Container>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}